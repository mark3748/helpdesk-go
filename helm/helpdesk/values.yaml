image:
  repository: ghcr.io/mark3748/helpdesk-go-api
  tag: latest
  pullPolicy: IfNotPresent

# Internal frontend (optional)
frontendInternal:
  enabled: true
  image:
    repository: ghcr.io/mark3748/helpdesk-go-internal-frontend
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80

# Requester frontend (optional, separate ingress)
frontendRequester:
  enabled: false
  image:
    repository: ghcr.io/mark3748/helpdesk-go-requester-frontend
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80

workerImage:
  repository: ghcr.io/mark3748/helpdesk-go-worker
  tag: latest
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: nginx
  hosts:
    - host: helpdesk.local
      paths:
        - path: /
          pathType: Prefix
        - path: /api
          pathType: Prefix
        - path: /swagger
          pathType: Prefix
  tls: []

# Separate ingress for requester portal (optional)
ingressRequester:
  enabled: false
  className: nginx
  apiProxy: true
  hosts:
    - host: requester.helpdesk.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

env:
  ENV: "prod"
  ADDR: ":8080"
  # CORS: allow origins for UIs calling the API (comma-separated)
  ALLOWED_ORIGINS: ""
  # External services (set to your endpoints)
  DATABASE_URL: "postgres://user:pass@postgres:5432/helpdesk?sslmode=disable"
  REDIS_ADDR: "redis:6379"
  # API auth (optional)
  AUTH_MODE: "oidc"
  AUTH_LOCAL_SECRET: ""
  OIDC_ISSUER: ""
  OIDC_JWKS_URL: ""
  # Object storage (optional)
  MINIO_ENDPOINT: ""
  MINIO_ACCESS_KEY: ""
  MINIO_SECRET_KEY: ""
  MINIO_BUCKET: ""
  MINIO_USE_SSL: "false"
  # Worker email/IMAP (optional)
  SMTP_HOST: ""
  SMTP_PORT: "25"
  SMTP_USER: ""
  SMTP_PASS: ""
  SMTP_FROM: ""
  IMAP_HOST: ""
  IMAP_USER: ""
  IMAP_PASS: ""
  IMAP_FOLDER: "INBOX"

resources: {}

nodeSelector: {}
tolerations: []
affinity: {}
